/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardTeamsIndexImport } from './routes/dashboard/teams/index'
import { Route as DashboardSettingsIndexImport } from './routes/dashboard/settings/index'
import { Route as AuthSignupIndexImport } from './routes/auth/signup/index'
import { Route as AuthResetPasswordIndexImport } from './routes/auth/reset-password/index'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'
import { Route as AuthGoogleIndexImport } from './routes/auth/google/index'
import { Route as AuthForgotPasswordIndexImport } from './routes/auth/forgot-password/index'
import { Route as DashboardTasksCalendarIndexImport } from './routes/dashboard/tasks/calendar/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardTeamsIndexRoute = DashboardTeamsIndexImport.update({
  id: '/dashboard/teams/',
  path: '/dashboard/teams/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexImport.update({
  id: '/dashboard/settings/',
  path: '/dashboard/settings/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupIndexRoute = AuthSignupIndexImport.update({
  id: '/auth/signup/',
  path: '/auth/signup/',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordIndexRoute = AuthResetPasswordIndexImport.update({
  id: '/auth/reset-password/',
  path: '/auth/reset-password/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any)

const AuthGoogleIndexRoute = AuthGoogleIndexImport.update({
  id: '/auth/google/',
  path: '/auth/google/',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexImport.update({
  id: '/auth/forgot-password/',
  path: '/auth/forgot-password/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardTasksCalendarIndexRoute =
  DashboardTasksCalendarIndexImport.update({
    id: '/dashboard/tasks/calendar/',
    path: '/dashboard/tasks/calendar/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgot-password/': {
      id: '/auth/forgot-password/'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/google/': {
      id: '/auth/google/'
      path: '/auth/google'
      fullPath: '/auth/google'
      preLoaderRoute: typeof AuthGoogleIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset-password/': {
      id: '/auth/reset-password/'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup/': {
      id: '/auth/signup/'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/dashboard/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/teams/': {
      id: '/dashboard/teams/'
      path: '/dashboard/teams'
      fullPath: '/dashboard/teams'
      preLoaderRoute: typeof DashboardTeamsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/tasks/calendar/': {
      id: '/dashboard/tasks/calendar/'
      path: '/dashboard/tasks/calendar'
      fullPath: '/dashboard/tasks/calendar'
      preLoaderRoute: typeof DashboardTasksCalendarIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/google': typeof AuthGoogleIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexRoute
  '/auth/signup': typeof AuthSignupIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/teams': typeof DashboardTeamsIndexRoute
  '/dashboard/tasks/calendar': typeof DashboardTasksCalendarIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/google': typeof AuthGoogleIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexRoute
  '/auth/signup': typeof AuthSignupIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/teams': typeof DashboardTeamsIndexRoute
  '/dashboard/tasks/calendar': typeof DashboardTasksCalendarIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/auth/google/': typeof AuthGoogleIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/reset-password/': typeof AuthResetPasswordIndexRoute
  '/auth/signup/': typeof AuthSignupIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/teams/': typeof DashboardTeamsIndexRoute
  '/dashboard/tasks/calendar/': typeof DashboardTasksCalendarIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/forgot-password'
    | '/auth/google'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/dashboard/settings'
    | '/dashboard/teams'
    | '/dashboard/tasks/calendar'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/forgot-password'
    | '/auth/google'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/dashboard/settings'
    | '/dashboard/teams'
    | '/dashboard/tasks/calendar'
  id:
    | '__root__'
    | '/'
    | '/dashboard/'
    | '/auth/forgot-password/'
    | '/auth/google/'
    | '/auth/login/'
    | '/auth/reset-password/'
    | '/auth/signup/'
    | '/dashboard/settings/'
    | '/dashboard/teams/'
    | '/dashboard/tasks/calendar/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthGoogleIndexRoute: typeof AuthGoogleIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthResetPasswordIndexRoute: typeof AuthResetPasswordIndexRoute
  AuthSignupIndexRoute: typeof AuthSignupIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
  DashboardTeamsIndexRoute: typeof DashboardTeamsIndexRoute
  DashboardTasksCalendarIndexRoute: typeof DashboardTasksCalendarIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthGoogleIndexRoute: AuthGoogleIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthResetPasswordIndexRoute: AuthResetPasswordIndexRoute,
  AuthSignupIndexRoute: AuthSignupIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
  DashboardTeamsIndexRoute: DashboardTeamsIndexRoute,
  DashboardTasksCalendarIndexRoute: DashboardTasksCalendarIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard/",
        "/auth/forgot-password/",
        "/auth/google/",
        "/auth/login/",
        "/auth/reset-password/",
        "/auth/signup/",
        "/dashboard/settings/",
        "/dashboard/teams/",
        "/dashboard/tasks/calendar/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/auth/forgot-password/": {
      "filePath": "auth/forgot-password/index.tsx"
    },
    "/auth/google/": {
      "filePath": "auth/google/index.tsx"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx"
    },
    "/auth/reset-password/": {
      "filePath": "auth/reset-password/index.tsx"
    },
    "/auth/signup/": {
      "filePath": "auth/signup/index.tsx"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/index.tsx"
    },
    "/dashboard/teams/": {
      "filePath": "dashboard/teams/index.tsx"
    },
    "/dashboard/tasks/calendar/": {
      "filePath": "dashboard/tasks/calendar/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
